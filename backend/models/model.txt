#User Model — Authentication, profile, friends, subscription

const UserSchema = new mongoose.Schema({
  username: { type: String, unique: true, required: true },
  email: { type: String, unique: true, required: true },
  passwordHash: { type: String, required: true }, // bcrypt hash
  profilePic: { type: String }, // URL in S3/Azure
  bio: { type: String, maxlength: 200 },

  friends: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
  friendRequests: [{
    from: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
    status: { type: String, enum: ["pending", "accepted", "rejected"], default: "pending" }
  }],

  subscription: {
    plan: { type: String, enum: ["free", "pro"], default: "free" },
    validUntil: { type: Date }
  },

  createdAt: { type: Date, default: Date.now }
});
------------------------------------------------------------------------
## Voice Note Model — Personal or shared audio notes

const VoiceNoteSchema = new mongoose.Schema({
  userId: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
  title: { type: String, required: true },
  tags: [{ type: String }],
  audioUrl: { type: String, required: true }, // stored in cloud
  duration: { type: Number, required: true },
  transcription: { type: String }, // AI transcription
  visibility: { type: String, enum: ["private", "friends", "public"], default: "private" },

  createdAt: { type: Date, default: Date.now }
});
-------------------------------------------------------------------------------------